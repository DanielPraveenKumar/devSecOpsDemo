name: DevSecOps Pipeline Demo
on:
  workflow_dispatch:
  push: 
    branches:
      - dev
permissions:
    checks: write
    security-events: write
    packages: write
    actions: write
jobs:
  GGShield:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    # - name: Git_guardian
    #   uses: GitGuardian/ggshield-action@v1.20.0
    #   env:
    #         GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
    #         GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
    #         GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
    #         GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
    #         GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
    #   continue-on-error: true
      
  Build_and_test:
    needs: GGShield
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
            
    - name: Build Maven
      run: mvn -B package --file pom.xml
  
    # - name: find xml path
    #   run : |
    #      echo "present folders"
    #      ls target
    #      echo "find jacoco"
    #      find -name *.xml
    #      find -name *jacoco*
      
    - uses: actions/upload-artifact@v3
      with:
        name: coffeshopartifact
        path: ./target/*.jar
    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v2
      with:
         name: jacoco-report
         path: target/site/jacoco/jacoco.xml
    - name: Add coverage to PR
      id: jacoco
      uses: madrapps/jacoco-report@v1.6.1
      with:
          paths: |
             target/site/jacoco/jacoco.xml
          token: ${{ secrets.PAT_TOKEN }}
  # Snyk: 
  #     needs: Build_and_test
  #     runs-on: ubuntu-latest
  #     steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Use Node.js 
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 11.x
  #     - name: Install Snyk CLI
  #       run: npm install -g snyk@1.1237.0 

  #     - name: Authenticate Snyk
  #       run: snyk auth ${{ secrets.SNYK_KEY }}

  #     - name: Run Snyk Test
  #       run: |
  #         snyk test --all-projects
  #         echo $?      
  #       continue-on-error: true
        
  #     - name: snyk status
  #       run: |
  #         echo $?
  #         snyk_exit_status=$?
  #         if [ $snyk_exit_status -eq 0 ]; then
  #           echo "Snyk test passed, no vulnerabilities found."
  #         else
  #           echo "Snyk test failed, vulnerabilities found."
  #           exit 1
  #         fi
  # Sbom:
  #   needs: Snyk
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v3
  #   - name: Generate SBOM
  #     run: mvn org.cyclonedx:cyclonedx-maven-plugin:makeAggregateBom

  #   - name: Upload SBOM report to artifact
  #     uses: actions/upload-artifact@v3
  #     with:
  #         name: "sbom-${{ github.run_number }}"
  #         path: target/CycloneDX-Sbom.json

   
  # opensource-security:
  #   needs: [ Sbom ]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Run Snyk to check for vulnerabilities
  #       uses: snyk/actions/maven@master
  #       continue-on-error: true
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_KEY }}

  # code-security:
  #   needs: [ opensource-security ]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Run Snyk to check for vulnerabilities
  #       uses: snyk/actions/maven@master
  #       continue-on-error: true
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_KEY }}
  #       with:
  #         command: code test

  # opensource-monitor:
  #   needs: [ opensource-security, code-security ]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Run Snyk to check for vulnerabilities
  #       uses: snyk/actions/maven@master
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_KEY}}
  #       with:
  #         command: monitor

  # Docker_push:
  #     needs: [opensource-monitor]
  #     runs-on: ubuntu-latest
  
  #     steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - uses: actions/download-artifact@v3
  #       with:
  #           name: coffeshopartifact
  #           path: ./
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v2
  #       with:
  #           username: ${{ secrets.DOCKER_USERNAME }}
  #           password: ${{ secrets.DOCKER_TOKEN }}
  #     - name: Build Container image
  #       run: docker build -t ${{ secrets.DOCKER_REPO }}:${{ github.run_number }} .
  #     - name: Publish Docker image
  #       run: docker push ${{ secrets.DOCKER_REPO }}:${{ github.run_number }}
 
  # Deploy:
  #     needs: Docker_push
  #     runs-on: ubuntu-latest
  #     steps:
  #       - name: Checkout Repository
  #         uses: actions/checkout@v3
  #         with:
  #           repository: danielpraveenkumar/Deployment   # Replace with the repository URL
  #           ref: main 
  #           token: ${{secrets.PAT_TOKEN }}


  
  #       - name: Modify Manifest
  #         run: |
  #             # Replace the image and tag in the manifest file
  #             echo "GitHub Runnumber: ${{ github.run_number }}"
  #             sed -i "s|${{ secrets.DOCKER_REPO }}:.*|${{ secrets.DOCKER_REPO }}:${{ github.run_number }}|" ./manifest/deployment.yaml
        
  #       - name: Debug - Show Git Status After Changes
  #         run: git status
  #         shell: bash
  
  #       - name: Commit and Push Change
  #         run: |
  #             git config --global user.name "DanielPraveenKumar"
  #             git config --global user.email "danielpraveenkumar.k@gmail.com"
  #             git add ./manifest/deployment.yaml
  #             git commit -m "Update image tag"
  #             git push origin main  
  #         env:
  #           PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
